// func DeleteObject(w http.ResponseWriter, r *http.Request) {

// 	cid := r.FormValue("cid")

// 	pinResp := unpinObject(cid)

// 	if !pinResp {
// 		http.Error(w, "The cid's pin has not been removed", http.StatusInternalServerError)
// 		fmt.Println("The cid's pin has not been removed")
// 		return
// 	}

// 	url := "http://ec2-3-147-65-246.us-east-2.compute.amazonaws.com:5001/api/v0/block/rm?arg=" + cid

// 	resp, err := http.Post(url, "", nil)
// 	if err != nil {
// 		fmt.Println("Error al hacer la solicitud HTTP:", err)
// 		return
// 	}

// 	if resp.StatusCode != http.StatusOK {
// 		http.Error(w, "Cid not found", http.StatusNotFound)
// 	}

// 	defer resp.Body.Close()

// 	body, err := io.ReadAll(resp.Body)
// 	if err != nil {
// 		fmt.Println("Error al leer la respuesta:", err)
// 		return
// 	}
// 	var response deleteRespond
// 	erro := json.Unmarshal(body, &response)
// 	if erro != nil {
// 		fmt.Println("Error en response:", err)
// 		return
// 	}

// 	var message deleteRespond

// 	if response.Error == "" {
// 		message = deleteRespond{IPFS: true, S3: true, Message: "The file has been removed successfully", Error: response.Error}
// 	} else {
// 		message = deleteRespond{IPFS: false, S3: false, Message: "The file has not been removed", Error: response.Error}
// 	}

// 	messageJson, err := json.Marshal(message)
// 	if err != nil {
// 		fmt.Println("Error en messageJson:", err)
// 		return
// 	}

// 	w.Header().Set("Content-Type", "application/json")
// 	w.WriteHeader(http.StatusOK)
// 	w.Write(messageJson)
// }

// func unpinObject(cid string) bool {

// 	url := "http://ec2-3-147-65-246.us-east-2.compute.amazonaws.com:5001/api/v0/pin/rm?arg=" + cid

// 	req, err := http.Post(url, "", nil)
// 	if err != nil {
// 		fmt.Println("Error al hacer la solicitud HTTP:", err)
// 		return false
// 	}

// 	if req.StatusCode != http.StatusOK {
// 		fmt.Println("Cid not found", err)
// 		return false
// 	}

// 	return true
// }